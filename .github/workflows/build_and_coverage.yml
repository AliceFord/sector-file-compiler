name: Build Test and Coverage

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  Build_Test_Coverage:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Restore Nuget Packages
        run: dotnet restore SectorFileCompiler.sln --packages packages

      - name: Run Build
        run: dotnet build /p:Configuration=Release SectorFileCompiler.sln --nologo --no-restore /warnaserror;
      
      - name: Run Compiler Tests With Coverage
        if: matrix.platform == 'ubuntu-latest'
        run: |
          cd tests/CompilerTest
          dotnet dotcover test --dcReportType=DetailedXml --dcOutput=../../coverage/Compiler.xml

      - name: Run Compiler Tests
        if: matrix.platform != 'ubuntu-latest'
        run: |
          cd tests/CompilerTest
          dotnet test

      - name: Run Compiler CLI Tests With Coverage
        if: matrix.platform == 'ubuntu-latest'
        run: |
          cd tests/CompilerCliTest
          dotnet dotcover test --dcReportType=DetailedXml --dcOutput=../../coverage/CompilerCli.xml

      - name: Run Compiler CLI Tests
        if: matrix.platform != 'ubuntu-latest'
        run: |
          cd tests/CompilerCliTest
          dotnet test
          
      - name: Publish Assets
        if: matrix.platform == 'windows-latest'
        run: | 
          dotnet publish -r win-x64 -c Release -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true -p:SelfContained=true -p:PublishTrimmed=true -o publish/windows src/CompilerCli/CompilerCli.csproj
          dotnet publish -r linux-x64 -c Release -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true -p:SelfContained=true -p:PublishTrimmed=true -o publish/linux src/CompilerCli/CompilerCli.csproj
          dotnet publish -r osx-x64 -c Release -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true -p:SelfContained=true -p:PublishTrimmed=true -o publish/osx src/CompilerCli/CompilerCli.csproj
                
      - name: Upload Windows Assets
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: "CompilerCli-windows-x64.exe"
          path: "publish/windows/CompilerCli.exe"
          
      - name: Upload Linux Assets
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: "CompilerCli-linux-x64.exe"
          path: "publish/linux/CompilerCli"
          
      - name: Upload OSX Assets
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: "CompilerCli-osx-x64.exe"
          path: "publish/osx/CompilerCli"

      - name: Upload Code Coverage Reports
        if: matrix.platform == 'ubuntu-latest'
        run: |
          cd coverage
          bash <(curl -s https://codecov.io/bash) -f *.xml
